# =====================================================
# LEO RUNNER ENVIRONMENT CONFIGURATION
# =====================================================
# Copy this file to .env and fill in your actual values
# Never commit your .env file with real credentials!

# =====================================================
# APPLICATION SETTINGS
# =====================================================
NODE_ENV=development
PORT=9002

# =====================================================
# LLM API KEYS FOR AI PROVIDERS
# =====================================================
# Get API keys from the respective providers:

# Claude (Anthropic) - https://console.anthropic.com/
# Recommended for: Code analysis, security reviews, critical bug fixes
ANTHROPIC_API_KEY=your_claude_api_key_here

# OpenAI - https://platform.openai.com/api-keys
# Recommended for: Performance optimization, general coding tasks
OPENAI_API_KEY=your_openai_api_key_here

# Google Gemini - https://aistudio.google.com/app/apikey
# Recommended for: Documentation, dependency analysis, configuration issues
GOOGLE_API_KEY=your_gemini_api_key_here

# =====================================================
# LOCAL LLM CONFIGURATION (OLLAMA)
# =====================================================
# Ollama runs locally - no API key needed
# Install from: https://ollama.ai
# 
# After installation, pull recommended models:
# ollama pull llama3.2        # General purpose
# ollama pull codellama        # Code-specific tasks
# ollama pull deepseek-coder   # Advanced coding assistance
#
# Ollama URL (default: http://localhost:11434)
OLLAMA_BASE_URL=http://localhost:11434

# =====================================================
# FIREBASE CONFIGURATION
# =====================================================
# Get these from Firebase Console > Project Settings > General Tab

# Client-side Firebase Configuration (Safe to expose)
NEXT_PUBLIC_FIREBASE_API_KEY=your_firebase_api_key_here
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_project_id.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_project_id
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your_project_id.appspot.com
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your_sender_id_here
NEXT_PUBLIC_FIREBASE_APP_ID=your_app_id_here

# Server-side Firebase Admin SDK (Keep these SECRET!)
# Get these from Firebase Console > Project Settings > Service Accounts
FIREBASE_PROJECT_ID=your_project_id
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your_project_id.iam.gserviceaccount.com
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nyour_private_key_here\n-----END PRIVATE KEY-----"
FIREBASE_PRIVATE_KEY_ID=your_private_key_id
FIREBASE_CLIENT_ID=your_client_id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token
FIREBASE_CERT_URL=https://www.googleapis.com/oauth2/v1/certs

# =====================================================
# VECTOR STORAGE CONFIGURATION
# =====================================================
# ChromaDB Configuration (for vector embeddings)
CHROMA_URL=http://localhost:8000
CHROMA_API_KEY=optional_chroma_api_key

# SQLite Vector Configuration (alternative to ChromaDB)
SQLITE_VEC_DB_PATH=./data/vector.db

# =====================================================
# CLAUDE CODE INTEGRATION
# =====================================================
# Claude Code specific settings
CLAUDE_CODE_PROJECT_ROOT=./
CLAUDE_CODE_CACHE_DIR=./.claude-cache
CLAUDE_CODE_LOG_LEVEL=info

# =====================================================
# MONITORING & ANALYTICS
# =====================================================
# Application monitoring
SENTRY_DSN=your_sentry_dsn_here
SENTRY_ORG=your_sentry_org
SENTRY_PROJECT=your_sentry_project

# Analytics (optional)
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX
MIXPANEL_TOKEN=your_mixpanel_token

# =====================================================
# EMAIL CONFIGURATION (Optional)
# =====================================================
# For notifications and alerts
EMAIL_PROVIDER=sendgrid  # sendgrid, mailgun, smtp
EMAIL_API_KEY=your_email_api_key
EMAIL_FROM=noreply@yourdomain.com

# SMTP Configuration (if using EMAIL_PROVIDER=smtp)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_app_password

# =====================================================
# EXTERNAL INTEGRATIONS
# =====================================================
# GitHub Integration (for repository analysis)
GITHUB_TOKEN=ghp_your_github_token_here
GITHUB_WEBHOOK_SECRET=your_webhook_secret

# Slack Integration (for notifications)
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your_slack_signing_secret
SLACK_CHANNEL_ID=C1234567890

# Discord Integration (alternative to Slack)
DISCORD_BOT_TOKEN=your_discord_bot_token
DISCORD_GUILD_ID=your_discord_server_id
DISCORD_CHANNEL_ID=your_discord_channel_id

# =====================================================
# DEVELOPMENT & DEBUGGING
# =====================================================
# Development settings
DEBUG=false
LOG_LEVEL=info
ENABLE_SOURCE_MAPS=false

# Database debugging
DEBUG_SQL=false
DEBUG_FIREBASE=false

# AI Provider debugging
DEBUG_LLM_REQUESTS=false
DEBUG_PROVIDER_SELECTION=false

# =====================================================
# SECURITY SETTINGS
# =====================================================
# JWT Configuration
JWT_SECRET=your_super_secret_jwt_key_here
JWT_EXPIRES_IN=7d

# Session Configuration
SESSION_SECRET=your_session_secret_here
SESSION_MAX_AGE=604800000  # 7 days in milliseconds

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100  # requests per window

# CORS Configuration
CORS_ORIGIN=http://localhost:9002,http://localhost:3000
CORS_CREDENTIALS=true

# =====================================================
# ADVANCED CONFIGURATION
# =====================================================
# WebSocket Configuration
WS_PORT=9003
WS_HEARTBEAT_INTERVAL=30000

# Redis Configuration (for caching and sessions)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your_redis_password

# PostgreSQL Configuration (if using instead of Firebase)
DATABASE_URL=postgresql://user:password@localhost:5432/leorunner
DATABASE_POOL_SIZE=10

# =====================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =====================================================
# These can be overridden in .env.local, .env.development, etc.

# Build Configuration
NEXT_TELEMETRY_DISABLED=1
TURBO_TELEMETRY_DISABLED=1

# Package Manager
NPM_REGISTRY=https://registry.npmjs.org/

# =====================================================
# NOTES & SETUP INSTRUCTIONS
# =====================================================
# 
# 1. REQUIRED for basic functionality:
#    - At least one LLM API key (ANTHROPIC_API_KEY or OPENAI_API_KEY)
#    - Firebase configuration (if using Firebase features)
#
# 2. OPTIONAL but recommended:
#    - Ollama for local LLM support
#    - Monitoring tools (Sentry)
#    - Email configuration for notifications
#
# 3. SECURITY REMINDERS:
#    - Never commit this file with real values
#    - Use strong, unique passwords and secrets
#    - Rotate API keys regularly
#    - Use environment-specific files for different deployments
#
# 4. QUICK START:
#    - Copy this file to .env
#    - Add your LLM API keys
#    - Configure Firebase if needed
#    - Run: ./setup.sh
#    - Start: ./start.sh
#
# =====================================================